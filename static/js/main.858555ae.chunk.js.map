{"version":3,"sources":["App.tsx","index.tsx"],"names":["App","state","pressedkey","document","addEventListener","event","key","setState","removeEventListener","this","className","React","Component","ReactDOM","render","getElementById"],"mappings":"oNAMaA,EAAb,4MACEC,MAAQ,CACNC,WAAY,IAFhB,uDAKE,WAAqB,IAAD,OAClBC,SAASC,iBAAiB,SAAS,SAACC,GAClC,IAAQC,EAAQD,EAARC,IAER,EAAKC,SAAS,CAAEL,WAAYI,SATlC,kCAaE,WAAwB,IAAD,OACrBH,SAASK,oBAAoB,SAAS,SAACH,GACrC,EAAKJ,MAAMC,WAAaG,EAAMC,SAfpC,oBAmBE,WACE,IAAQJ,EAAeO,KAAKR,MAApBC,WAER,OACE,qBAAKQ,UAAU,MAAf,SACE,mBAAGA,UAAU,eAAb,SAEIR,EAAU,mCACsBA,EADtB,KAEN,kCA5BhB,GAAyBS,IAAMC,W,MCD/BC,IAASC,OACP,cAAC,EAAD,IACAX,SAASY,eAAe,W","file":"static/js/main.858555ae.chunk.js","sourcesContent":["import React from 'react';\n\ntype State = {\n  pressedkey: string,\n};\n\nexport class App extends React.Component< {}, State > {\n  state = {\n    pressedkey: '',\n  };\n\n  componentDidMount() {\n    document.addEventListener('keyup', (event: KeyboardEvent) => {\n      const { key } = event;\n\n      this.setState({ pressedkey: key });\n    });\n  }\n\n  componentWillUnmount() {\n    document.removeEventListener('keyup', (event: KeyboardEvent) => {\n      this.state.pressedkey = event.key;\n    });\n  }\n\n  render() {\n    const { pressedkey } = this.state;\n\n    return (\n      <div className=\"App\">\n        <p className=\"App__message\">\n          {\n            pressedkey\n              ? `The last pressed key is [${pressedkey}]`\n              : 'Nothing was pressed yet'\n          }\n        </p>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nimport './index.scss';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}